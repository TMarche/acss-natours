/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    /* Common technique to make converting to rem easy */
    /* We want 10px --> 10 / 16 --> 62.5%*/
    font-size: 62.5%;
}

/* Font Properties */
body {
    font-family: "Lato";
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: #777;
    padding: 3rem;

    box-sizing: border-box;
}

.header {
    height: 95vh; /* Set to 95% height of viewport*/
    background-image: linear-gradient(
        to right bottom,
        #7ed56fcb,
        #28b485c3),
        url("../img/hero.jpg"); /* we can specify TWO background images*/
    background-size: cover;
    background-position: top;
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.header__logo-box {
    /* Absolute positioning */
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.header__logo {
    height: 3.5rem;
}

.header__text-box {
    position: absolute;
    /* These account for the width and height of the parent element */
    top: 40%;
    left: 50%;
    /* This accounts for the width of the element itself */
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;

    /* Removes 'shakiness' when transforming*/
    backface-visibility: hidden;

    margin-bottom: 6rem;
}

.heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    
    /* animation-iteration-count: 3; */
    /* animation-delay: 3s; */
}

.heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;

    animation: moveInRight 1s ease-out;
}

/* Browsers are optimized for transform and opacity */
@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);  /*This will move it back to its original position*/ 
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);  /*This will move it back to its original position*/ 
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);  /*This will move it back to its original position*/ 
    }
}

/* Use link pseudoclass */
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    transition: all .2s;
    position: relative;
    font-size: 1.6rem;
}

.btn:hover {
    transform: translateY(-.3rem);
    /*x-direction, y-direction blur*/
    box-shadow: 0 1rem 2rem rgba(0,0,0, .2);
}

.btn:active {
    /* This is related to the ORIGINAL state */
    transform: translateY(-.1rem);
    box-shadow: 0 .5rem 1rem rgba(0,0,0, .2);
}

.btn--white {
    background-color: white;
    color: #777;
    border-radius:  10rem;
}

/* Essentially treated like a child of the parent element */
.btn::after {
    /* Required for it to appear */
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    /* Needs to have a reference -- first element with pos relative that it can find */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn--white::after {
    background-color: #fff;
}

/* After pseudo-element only when we have hover state */
.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn--animated {
    animation: moveInBottom .5s ease-out .75s;
    /* Initial animation styles will be applied before the animation starts*/
    animation-fill-mode: backwards;
}
